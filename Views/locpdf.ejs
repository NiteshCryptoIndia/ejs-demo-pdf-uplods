<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Board Resolution</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      padding: 20px;
    }
    h2 {
      text-align: center;
      margin-bottom: 30px;
      text-decoration: underline;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }
    th, td {
      border: 1px solid #aaa;
      padding: 10px;
      text-align: center;
    }
    img.signature {
      max-height: 80px;
    }
    .download-btn {
      margin-top: 30px;
      text-align: center;
    }
    button {
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <h2>Board Resolution</h2>

  <p>Date: <%= resolutionDate %></p>
  <p>Time: <%= resolutionTime %></p>
  <p>Company: <strong><%= companyName || 'Crypto India Pvt. Ltd.' %></strong></p>
  <p>Meeting Location: <%= meetingAddress || '5th Floor, Tech Park, Bangalore' %></p>

  <p>
    The meeting was called to discuss and pass the board resolution with the participation of the following directors.
  </p>

  <table>
    <thead>
      <tr>
        <th>Name</th>
        <th>PAN Number</th>
        <th>Email</th>
        <th>Signature</th>
      </tr>
    </thead>
    <tbody>
      <% loaData.forEach((director) => { %>
      <tr>
        <td><%= director.name || 'N/A' %></td>
        <td><%= director.panNumber || 'N/A' %></td>
        <td><%= director.email || 'N/A' %></td>
        <td>
          <% if (director.fileUrl) { %>
            <img src="<%= director.fileUrl %>" alt="Signature" class="signature">
          <% } else { %>
            <span style="color: gray;">No signature uploaded</span>
          <% } %>
        </td>
      </tr>
      <% }); %>
    </tbody>
  </table>

  <div class="download-btn">
    <button onclick="generatePDF()">Download PDF</button>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
<script>
  async function convertImagesToBase64() {
    const images = document.querySelectorAll("img.signature");

    for (const img of images) {
      const src = img.getAttribute("src");

      if (!src.startsWith("data:")) {
        try {
          const response = await fetch(src, { mode: 'cors' });
          const blob = await response.blob();

          const reader = new FileReader();
          await new Promise((resolve) => {
            reader.onloadend = () => {
              img.src = reader.result; // convert to base64
              resolve();
            };
            reader.readAsDataURL(blob);
          });
        } catch (err) {
          console.error("Could not convert image to base64:", src, err);
        }
      }
    }
  }

  async function generatePDF() {
    await convertImagesToBase64(); // Ensure all images converted before PDF
    const element = document.body;
    const opt = {
      margin: 0.5,
      filename: 'BoardResolution.pdf',
      image: { type: 'jpeg', quality: 0.98 },
      html2canvas: { scale: 2 },
      jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' }
    };
    html2pdf().set(opt).from(element).save();
  }
</script>

</body>
</html>
