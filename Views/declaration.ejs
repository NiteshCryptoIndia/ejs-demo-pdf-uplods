<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Declaration of Source of Funds</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 40px;
      line-height: 1.6;
    }
    h1, h2 {
      text-align: center;
    }
    .section {
      margin-top: 20px;
    }
    .signature-box {
      margin-top: 40px;
      border-top: 1px solid #ccc;
      padding-top: 20px;
    }
    canvas {
      border: 2px solid #444;
      display: block;
      margin-top: 10px;
    }
    .preview-image, .preview-signature {
      margin-top: 10px;
      max-width: 300px;
      border: 1px solid #aaa;
    }
    .form-group {
      margin-bottom: 15px;
    }
  </style>
</head>
<body>

  <!-- <form action="/submit" method="POST" enctype="multipart/form-data"> -->
  <form id="declarationForm" action="/submit-form" method="POST">
    <h2>Company Letterhead</h2>
    <h1>DECLARATION OF SOURCE OF FUNDS</h1>

    <p><strong>Date:</strong> <%= declarationDate %></p>

    <p>
      I, <strong><%= directorName %></strong>, in my capacity as the Director of
      <strong><%= companyName %></strong>, hereby declare and affirm that all funds
      transferred by our company to CRYPTO INDIA (INCRYP BLOCKCHAIN PRIVATE LIMITED),
      in INR (Indian Currency) and any other cryptocurrency, are obtained from legitimate and legal sources.
    </p>

    <div class="section">
      <p>We further declare that:</p>
      <ol>
        <li><strong>Legitimate Source:</strong> Funds are not linked to illegal activities.</li>
        <li><strong>Compliance:</strong> Our company follows AML/CTF/KYC regulations.</li>
        <li><strong>Due Diligence:</strong> We verify all parties before transactions.</li>
        <li><strong>Ethical Standards:</strong> Business funds are transparent and lawful.</li>
        <li><strong>Cooperation:</strong> We will fully cooperate with regulatory authorities.</li>
      </ol>
    </div>

    <% if (typeof imagePath !== 'undefined' && imagePath && imagePath.startsWith('data:')) { %>
  <div style="margin-top:10px;">
    <img class="preview-image" src="<%= imagePath %>" alt="Photo/ID for PDF" />
  </div>
<% } %>

<% if (typeof signaturePath !== 'undefined' && signaturePath && signaturePath.startsWith('data:')) { %>
  <div style="margin-top:10px;">
    <img class="preview-signature" src="<%= signaturePath %>" alt="Signature for PDF" />
  </div>
<% } %>

<% if (!imagePath && !signaturePath) { %><div class="signature-box">

      <div class="form-group">
        <label><strong>Upload Photo/ID:</strong></label>
        <input type="file" id="imageInput" accept="image/*" required />
        <input type="hidden" name="imageBase64" id="imageBase64" />
        <br/>
        <img id="imagePreview" class="preview-image" src="" alt="Uploaded Preview" style="display:none;" />
      </div>

      <div class="form-group">
        <label><strong>Draw Signature:</strong></label>
        <canvas id="signature-pad" width="400" height="150" style="border:1px solid #ccc;"></canvas>
        <input type="hidden" name="signature" id="signature-input" />
        <button type="button" onclick="clearSignature()">Clear Signature</button>
        <button type="button" onclick="saveSignature()">Save Signature</button>
        <div>
          <img id="signaturePreview" class="preview-signature" src="" alt="Signature Preview" style="display:none;" />
        </div>
      </div>


      <!-- Hidden fields for text data to ensure they are posted -->
      <input type="hidden" name="directorName" value="<%= directorName %>" />
      <input type="hidden" name="companyName" value="<%= companyName %>" />
      <input type="hidden" name="mobileNumber" value="<%= mobileNumber %>" />
      <input type="hidden" name="declarationDate" value="<%= declarationDate %>" />

      <p><strong>Name:</strong> <%= directorName %></p>
      <p><strong>Mobile Number:</strong> <%= mobileNumber %></p>
      <p><strong>Date:</strong> <%= declarationDate %></p>







      <br />
      <button type="button" onclick="submitPreview()">Preview</button>
      <button type="submit">Submit & Generate PDF</button>
    </div>
    <% } %>
  </form>


  <script src="https://cdn.jsdelivr.net/npm/signature_pad@2.3.2/dist/signature_pad.min.js"></script>

<script>
  const canvas = document.getElementById("signature-pad");
  const signaturePad = new SignaturePad(canvas);
  const signatureInput = document.getElementById("signature-input");
  const signaturePreview = document.getElementById("signaturePreview");

  function saveSignature() {
    if (signaturePad.isEmpty()) {
      alert("Please draw a signature first.");
      return;
    }

    const dataURL = signaturePad.toDataURL("image/png");
    signatureInput.value = dataURL;
    signaturePreview.src = dataURL;
    signaturePreview.style.display = "block";
  }

  function clearSignature() {
    signaturePad.clear();
    signatureInput.value = "";
    signaturePreview.style.display = "none";
  }

  // Image upload preview and convert to base64
  document.getElementById("imageInput").addEventListener("change", function () {
    const file = this.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function (e) {
        const preview = document.getElementById("imagePreview");
        preview.src = e.target.result;
        preview.style.display = "block";
        document.getElementById("imageBase64").value = e.target.result;
      };
      reader.readAsDataURL(file);
    }
  });


  // Preview button handler
  function submitPreview() {
    if (signaturePad.isEmpty()) {
      alert("Please draw a signature before previewing.");
      return;
    }
    saveSignature();
    const form = document.getElementById("declarationForm");
    form.action = "/preview";
    form.method = "POST";
    form.submit();
  }

  // On form submit, ensure signature is saved as base64
  document.getElementById("declarationForm").addEventListener("submit", function (e) {
    if (signaturePad.isEmpty()) {
      alert("Please draw a signature before submitting.");
      e.preventDefault();
      return false;
    }
    // Save signature to hidden input
    saveSignature();
  });
</script>

  
  
  <!-- <script>

    
    const canvas = document.getElementById("signature-pad");
    const signaturePad = new SignaturePad(canvas);
  const ctx = canvas.getContext("2d");
  const signatureInput = document.getElementById("signature-input");
  const previewImg = document.getElementById("signaturePreview");

    function saveSignature() {
      if (signaturePad.isEmpty()) {
        alert("Please draw a signature first.");
        return;
      }

      const dataURL = signaturePad.toDataURL();
      fetch('/save-signature', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ image: dataURL })
      })
      .then(res => res.json())
      .then(data => {
        document.getElementById('signature-input').value = data.filename;
        document.getElementById('signaturePreview').src = `/uploads/${data.filename}`;
        document.getElementById('signaturePreview').style.display = 'block';
        alert("Signature saved!");
      });
    }

    // Show preview of uploaded image
    document.getElementById('imageInput').addEventListener('change', function () {
      const reader = new FileReader();
      reader.onload = function (e) {
        const preview = document.getElementById('imagePreview');
        preview.src = e.target.result;
        preview.style.display = 'block';
      }
      reader.readAsDataURL(this.files[0]);
    });



    // draw signature
 

  let isDrawing = false;

  canvas.addEventListener("mousedown", (e) => {
    isDrawing = true;
    ctx.beginPath();
    ctx.moveTo(e.offsetX, e.offsetY);
  });

  canvas.addEventListener("mousemove", (e) => {
    if (isDrawing) {
      ctx.lineTo(e.offsetX, e.offsetY);
      ctx.stroke();
    }
  });

  canvas.addEventListener("mouseup", () => {
    isDrawing = false;
  });

  canvas.addEventListener("mouseleave", () => {
    isDrawing = false;
  });

  function saveSignature() {
    const dataUrl = canvas.toDataURL("image/png");
    signatureInput.value = dataUrl;
    previewImg.src = dataUrl;
    previewImg.style.display = "block";
  }
  function clearSignature() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  signatureInput.value = "";
  previewImg.style.display = "none";
}

  </script> -->
</body>
</html>
